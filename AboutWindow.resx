<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="appLogoPicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Py8wxtb795uQAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>